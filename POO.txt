------------------------------------- AULA 04 ------------------------------------------------------


Metodos acessoers
Public = Indica que qualquer um pode acessar o elemento
Private = Indica que somente a classe pode acessar
Protected = Indica que somente a classe e seus filhos podem acessar
Default = Indica que somente a classe, seus filhos e as classes no mesmo packege podem acessar



					GETTERS E SETTERS
São métodos que a classe disponibliza, pra quem quiser modifcar do lado de forar, poder modificar ou obter informações sobre os atributos, já que em Java, a grande maioria é private
mas esses métodos podem passar por uma validação internamente dentro da classe.
Vai ser assim
	public void setNome
		this.nome = nome   = Alguém do lado de fora, agora vai poder trocar o nome

"Void signfica que nao vai ter retorno nenhum"

public String getNome
return this.nome:




					Construtores
O padrão é
Public Carro (){} (O nome "Carro é um exemplo")
Se eu n crio um construtor, o Java cria pra mim
Mas, posso ter um personalizado
Public Carro (String modelo, Integer ano, String cor){
}
Quando vc cria um construtor, o Padrão nao existe mais



		Formas de escrever
PascalCase; NotaFiscal.java  == Nomes de arquivo, classe e construtor dda classe
camelCase; notaFiscal	== atributos






------------------------------- AULA 05 ---------------------------------
Tipos de dados
				PRRIMITIVOS
Se eu criar uma variavel/ objeto, eu preciso criar de algum tipo. E temos tipos primitivos.

byte = é um tipo de byte ue recebe só byte. menor byte -128 e maior 127
Short = Campo de números pequenos, menor é -32768 e maior 32768
Integer = tipos inteiros, ver no VScode os menores e maiores números daqq pra frente.
Long = são valorers muitos grandes. Precisa de um L no final
Float = Pra valores flutuantes (elevados) Precisa colocar um F
Double = Tipo float, mas pra valores maiores. Double tem uma precisão muito maior
Long, Double e Integerr são os mais usados.

Existe também 
String = Armazenar textos
char = Textos muitos pequenos, quando queremos guardar algum caracter, e colocamos entre aspas simples
Boolean = Tipo de dado verdadeiro ou falso. True or false




------------------------------------ AULA 06 ---------------------------------------------------------------------

Criando um Banco Digital
Colocamos o número da agência como String, porque pode começar com 0 "001" e números inteiros não começam com 0, para nós colocarmos Integer
Tiramos o Set do Saldo, pq o saldo n é algo que o usuários pode alterar.
Tiramos o set do construtor

Até a primeira parte, fizemos.
Atribtuos = passo a passo. O que vai ter dentro da conta bancária
Construtores = Forma em que ela vai ser construida
Getters e Setters = métodos de acesso à esses atributos
Métodos = Recurso dentro de objeto ou classe que transformam ou geram comportamentos.

Criamos um método para depositar
public void depositar (DOuble valor). Pq o void? pq ele não vai me devolver nada. Só vai executar algo.
o Double p usa casa decimal, e é mais preciso.
Mas, tenho que pegar o valor, e somar na minha conta, né?
Então
this.saldo = this.saldo + valor
De uma forma simplificada fica
this.saldo += valor;
esse +=, signiffica que o saldo ta recebendo ele mesmo mais o valor

Criamos uma constate. Constante, diferente de variável, é algo que n]ao muda.
Constante tem que ser escrita com letras maiúsculas, e se for separar, tem que ser separada por underline

Usamos uma exceção. Quando trabalhamos com validações que não são atendidas, usamos uma excecção. Vale lembrar que usamos if, obviamente.

Fizemos de sacar tb. Então
Depositar vai verificar se o valor de depósito é menor que o valor minimo. Se for, nao pode acontecer depósito. Se nao, efetua o depósito somando o valor ao saldo.
Sacar verifica se o valor é maior que o saldo da conta. Se for, manda mensgaem de saldo insuficiente. Se nao, remove o valor de saque do saldo atual e retorna o valor sacado ao usuário.







